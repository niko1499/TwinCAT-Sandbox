<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="MAIN" Id="{2619c018-a97e-4e98-bfde-76b022b13f51}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN

VAR
	bGreenBtn    : BOOL;;
	bRedBtn		: BOOL;	
	
	bTestRef1 : REFERENCE TO BOOL;
	
	
	aInputs AT %I* : ARRAY[1..8] OF BOOL;
	aOutputs AT %Q* : ARRAY[1..8] OF BOOL;
	


	
	//input : fbDigitalInput(ioBitRef := bGreenBtn);
	//input2 : fbDigitalIO(ioBitRef := bTestRef1);
	//fbStartInput : fbDigitalInput(ioBitRef := (aInputs[1]));
	//fbStopInput : fbDigitalInput(ioBitRef := (aInputs[2]));
	//fbLightOutput : fbDigitalOutput(ioBitRef := (aOutputs[1]));
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[


aOutputs[8] := aInputs[8]; // Output 8 mirrors input 8


//bTestRef1 REF= aInputs[1];

bGreenBtn := aInputs[1];



IF bGreenBtn THEN
		aOutputs[1]:=TRUE;
		//fbLightOutput.Set(TRUE);
ELSE
		aOutputs[1]:=FALSE;
		//fbLightOutput.Set(FALSE);	
END_IF

(*
CASE CurrentState OF
    E_MyStates.STATE_IDLE:
        // Actions for the IDLE state
        Output1 := FALSE;
        Output2 := FALSE;

    E_MyStates.STATE_RUNNING:
        // Actions for the RUNNING state
        Output1 := TRUE;
        Output2 := TRUE;

    E_MyStates.STATE_STOPPED:
        // Actions for the STOPPED state
        Output1 := FALSE;
        Output2 := TRUE;

    E_MyStates.STATE_ERROR:
        // Actions for the ERROR state
        Output1 := TRUE;
        Output2 := FALSE;

ELSE
    // Default actions if CurrentState does not match any defined case
    // This is optional but good practice for handling unexpected values
    Output1 := FALSE;
    Output2 := FALSE;
END_CASE

*)]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>